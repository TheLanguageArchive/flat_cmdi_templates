<?php

use TLA\FLAT\CmdiTemplates\FormBuilder;

module_load_include('inc', 'flat_cmdi_templates', 'inc/db');
module_load_include('inc', 'flat_cmdi_templates', 'inc/exceptions');
module_load_include('inc', 'flat_cmdi_templates', 'inc/form');

function ibo($var, $exit = true) {
  echo '<pre>', var_dump($var) , '</pre>';
  if ($exit) {
    exit;
  }
}

function flat_cmdi_templates_form_get_available_templates($profile) {

  $templates = [];
  $rows      = flat_cmdi_templates_db_fetch_all($profile);

  foreach ($rows as $row) {
    $templates[$row['container']][$row['id']] = $row['label'];
  }

  return $templates;
}

function flat_cmdi_templates_form_flat_deposit_cmdi_form_alter(&$form, &$form_state) {

  // ibo($form_state['selected'], false);
  // ibo($form_state['triggering_element'], false);
  // ibo($form_state['input'], false);
  // ibo($form_state['parent_nid']);
  // ibo($form_state['triggering_element']['#name']);

  if (!isset($form_state['selected'])) {

    // no profile was selected
    return;
  }

  if (!isset($form['template_container']['elements'])) {

    // no elements available for templating
    return;
  }

  $profile = $form_state['selected'];
  $owner = $form_state['input']['owner'];

  if (isset($form_state['triggering_element']['#ajax']['callback']) && $form_state['triggering_element']['#ajax']['callback'] === 'flat_cmdi_templates_ajax_save_callback') {

    // saving block to database
    $element = $form_state['triggering_element'];
    $container_name = $element['#container_name'];
    $node_name = $element['#node_name'];
    $data = $form_state['input']['template_container']['elements'];

    // manually adding clarinprofileid because it is not sent when clicking button
    // that does not trigger validation
    // (@see Drupal 7 Form API #limit_validation_errors)
    $data['data'] = $form['template_container']['elements']['data']['#value'];

    flat_cmdi_templates_form_save($profile, $owner, $data[$container_name]['flat_cmdi_templates']['new_template']['label'], $data, $container_name, $node_name);

    // clearing form data
    unset($form_state['input']['template_container']['elements'][$container_name]['flat_cmdi_templates']);
  }

  if (isset($form_state['triggering_element']['#ajax']['callback']) && $form_state['triggering_element']['#ajax']['callback'] === 'flat_cmdi_templates_ajax_load_callback') {

    module_load_include('inc', 'flat_deposit', 'Helpers/CMDI/FormBuilder/class.FormBuilder');
    module_load_include('inc', 'flat_deposit', 'Helpers/CMDI/class.CmdiHandler');

    // loading block from database
    $element = $form_state['triggering_element'];
    $container_name = $element['#container_name'];
    $node_name = $element['#node_name'];

    $id = (int)$form_state['input']['template_container']['elements'][$container_name]['flat_cmdi_templates']['load_template'];

    $template = flat_cmdi_templates_db_fetch($id);
    $data = CmdiHandler::simplexml_load_cmdi_string('<' . $node_name . '>' . $template['template'] . '</' . $node_name . '>');

    unset($form_state['input']['template_container']['elements'][$container_name]);

    $formBuilder = new FormBuilder($template['filename']);
    $form['template_container']['elements'][$container_name] = $formBuilder->getComponent($template['node'], $data);
  }

  $all_available_templates = flat_cmdi_templates_form_get_available_templates($profile);

  foreach ($form['template_container']['elements'] as $container_name => $element) {

    // @TODO make this dependent on profile cmdi template file instead of fieldset
    // @see FormComposite.inc too
    if (!isset($element['#type']) || $element['#type'] !== 'fieldset') {
      continue;
    }

    $available_templates = $all_available_templates[$container_name] ?? false;

    $form['template_container']['elements'][$container_name]['#prefix'] = '<div id="template-container-elements-' . $container_name . '-wrapper">';
    $form['template_container']['elements'][$container_name]['#suffix'] = '</div>';
    $form['template_container']['elements'][$container_name]['flat_cmdi_templates'] = flat_cmdi_templates_fields($available_templates, $container_name, $element['#node_name']);
  }
}

function flat_cmdi_templates_form_flat_bundle_update_cmdi_form_alter(&$form, &$form_state) {

  // ibo($form_state['selected'], false);
  // ibo($form_state['triggering_element'], false);
  // ibo($form_state['input'], false);
  // ibo($form_state['parent_nid']);
  // ibo($form_state['triggering_element']['#name']);

  if (!isset($form['trigger']['select_profile_name']['#value'])) {

    // no profile was selected
    return;
  }

  if (!isset($form['template_container']['elements'])) {

    // no elements available for templating
    return;
  }

  global $user;

  $profile = $form['trigger']['select_profile_name']['#value'];
  $owner = $user->name;

  if (isset($form_state['triggering_element']['#ajax']['callback']) && $form_state['triggering_element']['#ajax']['callback'] === 'flat_cmdi_templates_ajax_save_callback') {

    // saving block to database
    $element = $form_state['triggering_element'];
    $container_name = $element['#container_name'];
    $node_name = $element['#node_name'];
    $data = $form_state['input']['template_container']['elements'];

    // manually adding clarinprofileid because it is not sent when clicking button
    // that does not trigger validation
    // (@see Drupal 7 Form API #limit_validation_errors)
    $data['data'] = $form['template_container']['elements']['data']['#value'];

    flat_cmdi_templates_form_save($profile, $owner, $data[$container_name]['flat_cmdi_templates']['new_template']['label'], $data, $container_name, $node_name);

    // clearing form data
    unset($form_state['input']['template_container']['elements'][$container_name]['flat_cmdi_templates']);
  }

  if (isset($form_state['triggering_element']['#ajax']['callback']) && $form_state['triggering_element']['#ajax']['callback'] === 'flat_cmdi_templates_ajax_load_callback') {

    module_load_include('inc', 'flat_deposit', 'Helpers/CMDI/FormBuilder/class.FormBuilder');
    module_load_include('inc', 'flat_deposit', 'Helpers/CMDI/class.CmdiHandler');

    // loading block from database
    $element = $form_state['triggering_element'];
    $container_name = $element['#container_name'];
    $node_name = $element['#node_name'];

    $id = (int)$form_state['input']['template_container']['elements'][$container_name]['flat_cmdi_templates']['load_template'];

    $template = flat_cmdi_templates_db_fetch($id);
    $data = CmdiHandler::simplexml_load_cmdi_string('<' . $node_name . '>' . $template['template'] . '</' . $node_name . '>');

    unset($form_state['input']['template_container']['elements'][$container_name]);

    $formBuilder = new FormBuilder($template['filename']);
    $form['template_container']['elements'][$container_name] = $formBuilder->getComponent($template['node'], $data);
  }

  $all_available_templates = flat_cmdi_templates_form_get_available_templates($profile);

  foreach ($form['template_container']['elements'] as $container_name => $element) {

    // @TODO make this dependent on profile cmdi template file instead of fieldset
    // @see FormComposite.inc too
    if (!isset($element['#type']) || $element['#type'] !== 'fieldset') {
      continue;
    }

    $available_templates = $all_available_templates[$container_name] ?? false;

    $form['template_container']['elements'][$container_name]['#prefix'] = '<div id="template-container-elements-' . $container_name . '-wrapper">';
    $form['template_container']['elements'][$container_name]['#suffix'] = '</div>';
    $form['template_container']['elements'][$container_name]['flat_cmdi_templates'] = flat_cmdi_templates_fields($available_templates, $container_name, $element['#node_name']);
  }
}

function flat_cmdi_templates_form_save($profile, $owner, $label, $data, $container_name, $node_name) {

  module_load_include('inc', 'flat_deposit', 'Helpers/CMDI/CmdiCreator/class.CmdiCreator');

  // rerunning autoloader, do not know why drupal does not do this when calling ajax
  // @TODO: find out why so this is not necessary
  autoload_cmdicreator();

  $creator = new CmdiCreator();

  try {

    $creator->setCmdi($profile, $data, $owner);

    $generatedCmdi = $creator->getCmdi();
    $block         = $generatedCmdi->Components->{$profile}->{$node_name};

    flat_cmdi_templates_db_save($profile, $label, $container_name, $node_name, $block->asXML());

  } catch (CmdiCreatorException $e) {
    form_set_error('error', $e->getMessage());
  }
}

function flat_cmdi_templates_fields($available_templates, $container_name, $node_name) {

   $fields = [

    '#type' => 'container',
    '#weight' => -100,
    '#prefix' => '<div id="flat-cmdi-templates-' . $container_name . '">',
    '#suffix' => '</div>',
  ];

  if (false === $available_templates) {

    // no templates for this container
    $fields['load_template'] = flat_cmdi_templates_no_templates();

  } else {

    $fields['load_template'] = [

      '#type' => 'select',
      '#options' => ['- select template -'] + $available_templates,
      '#attributes' => [
        'class' => ['flat-cmdi-templates-field'],
      ],
      '#container_name' => $container_name,
      '#node_name' => $node_name,
      '#ajax' => [
        'callback' => 'flat_cmdi_templates_ajax_load_callback',
        'method' => 'replace',
        'effect' => 'fade',
        'wrapper' => 'template-container-elements-' . $container_name . '-wrapper',
      ],
    ];
  }

  $fields['new_template'] = [

    'label' => [

      '#type' => 'textfield',
      '#default_value' => '',
      '#attributes' => [
        'class' => ['flat-cmdi-templates-field'],
        'placeholder' => 'Label of new template',
      ],
    ],

    'save' => [

      '#type' => 'button',
      '#name' => 'save_cmdi_template_' . $container_name,
      '#value' => 'Save as template',
      '#flat_ignore_button' => true,
      '#container_name' => $container_name,
      '#node_name' => $node_name,
      '#limit_validation_errors' => [],
      '#ajax' => [

        'callback' => 'flat_cmdi_templates_ajax_save_callback',
        'method' => 'replace',
        'effect' => 'fade',
        'wrapper' => 'flat-cmdi-templates-' . $container_name,
      ],
    ],
  ];

  return $fields;
}

function flat_cmdi_templates_no_templates() {

  return [
    '#markup' => '<strong>No templates available for this block</strong><br /><br />',
  ];
}

function flat_cmdi_templates_ajax_load_callback($form, &$form_state) {

  if (isset($form_state['triggering_element']['#ajax']['callback']) && $form_state['triggering_element']['#ajax']['callback'] === 'flat_cmdi_templates_ajax_load_callback') {
    return $form['template_container']['elements'][$form_state['triggering_element']['#container_name']];
  }
}

function flat_cmdi_templates_ajax_save_callback($form, &$form_state) {

  if (isset($form_state['triggering_element']['#ajax']['callback']) && $form_state['triggering_element']['#ajax']['callback'] === 'flat_cmdi_templates_ajax_save_callback') {
    return $form['template_container']['elements'][$form_state['triggering_element']['#container_name']]['flat_cmdi_templates'];
  }
}
